(()=>{var B=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var N=B(()=>{var w=document.getElementById("whitelist-form"),h=document.getElementById("whitelist-input"),I=document.getElementById("whitelist"),E=document.getElementById("blacklist-form"),p=document.getElementById("blacklist-input"),k=document.getElementById("blacklist"),y=document.getElementById("audit-log"),b=document.getElementById("clear-log"),A=document.getElementById("pin-form"),f=document.getElementById("pin-input"),m=document.getElementById("telemetry-opt-in"),L=document.getElementById("clear-data"),r=!1,u=e=>{[w,E,b,m,L].forEach(n=>{n.disabled=e})},v=async(e,t)=>{let o=new TextEncoder().encode(e+t),i=await crypto.subtle.digest("SHA-256",o);return Array.from(new Uint8Array(i)).map(c=>c.toString(16).padStart(2,"0")).join("")},P=async e=>new Promise(t=>{chrome.storage.local.get("pin",async n=>{if(!n.pin){t(!0);return}let{hash:o,salt:i}=n.pin,c=await v(e,i);t(c===o)})}),s=async()=>{let e=prompt("Please enter your PIN to continue:");if(e===null)return!1;let t=await P(e);return t?(r=!0,u(!1),a("PIN verified successfully.")):(alert("Incorrect PIN."),a("Incorrect PIN entered.")),t},d=(e,t,n)=>{t.innerHTML="",e.forEach((o,i)=>{let c=document.createElement("li");c.textContent=o;let l=document.createElement("button");l.textContent="Remove",l.addEventListener("click",async()=>{!r&&!await s()||(e.splice(i,1),chrome.storage.local.set({[n]:e},()=>{d(e,t,n),a(`Removed "${o}" from ${n}`)}))}),c.appendChild(l),t.appendChild(c)})},g=e=>{y.innerHTML="",e.forEach(t=>{let n=document.createElement("li");n.textContent=`[${new Date(t.timestamp).toLocaleString()}] ${t.message}`,y.appendChild(n)})},a=e=>{chrome.storage.local.get("auditLog",t=>{let n=t.auditLog||[];n.unshift({message:e,timestamp:Date.now()}),n.length>50&&n.pop(),chrome.storage.local.set({auditLog:n},()=>{g(n)})})};chrome.storage.local.get(["whitelist","blacklist","auditLog","telemetryOptIn","pin"],e=>{let t=e.whitelist||[],n=e.blacklist||[],o=e.auditLog||[];d(t,I,"whitelist"),d(n,k,"blacklist"),g(o),m.checked=e.telemetryOptIn||!1,e.pin&&(u(!0),s())});w.addEventListener("submit",async e=>{if(e.preventDefault(),!r&&!await s())return;let t=h.value.trim();t&&chrome.storage.local.get("whitelist",n=>{let o=n.whitelist||[];o.push(t),chrome.storage.local.set({whitelist:o},()=>{d(o,I,"whitelist"),a(`Added "${t}" to whitelist`),h.value=""})})});E.addEventListener("submit",async e=>{if(e.preventDefault(),!r&&!await s())return;let t=p.value.trim();t&&chrome.storage.local.get("blacklist",n=>{let o=n.blacklist||[];o.push(t),chrome.storage.local.set({blacklist:o},()=>{d(o,k,"blacklist"),a(`Added "${t}" to blacklist`),p.value=""})})});b.addEventListener("click",async()=>{!r&&!await s()||chrome.storage.local.set({auditLog:[]},()=>{g([]),a("Audit log cleared")})});A.addEventListener("submit",async e=>{e.preventDefault();let t=f.value;t&&chrome.storage.local.get("pin",async n=>{if(n.pin){let l=prompt("Enter your current PIN to change it:");if(l===null)return;if(!await P(l)){alert("Incorrect PIN."),a("Incorrect PIN entered when trying to change PIN.");return}}let o=crypto.getRandomValues(new Uint8Array(16)),i=Array.from(o).map(l=>l.toString(16).padStart(2,"0")).join(""),c=await v(t,i);chrome.storage.local.set({pin:{hash:c,salt:i}},()=>{a("PIN changed"),f.value="",alert("PIN changed successfully."),r=!0,u(!1)})})});m.addEventListener("change",async e=>{if(!r&&!await s()){e.target.checked=!e.target.checked;return}let t=e.target.checked;chrome.storage.local.set({telemetryOptIn:t},()=>{a(`Telemetry opt-in changed to ${t}`)})});L.addEventListener("click",async()=>{!r&&!await s()||confirm("Are you sure you want to clear all local data? This action cannot be undone.")&&chrome.storage.local.clear(()=>{a("All local data cleared"),location.reload()})})});N();})();
//# sourceMappingURL=data:application/json;base64,
